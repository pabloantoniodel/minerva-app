#!/bin/bash

# Script para configurar permisos y verificar el estado de la aplicaci√≥n iOS
# Minerva ERP

echo "üçé Configurando permisos para Minerva ERP iOS"
echo "============================================="

# Verificar si estamos en macOS
if [[ "$OSTYPE" != "darwin"* ]]; then
    echo "‚ùå Este script solo funciona en macOS"
    exit 1
fi

# Verificar que Xcode est√° instalado
if ! command -v xcodebuild &> /dev/null; then
    echo "‚ùå Error: Xcode no est√° instalado"
    echo "Instala Xcode desde la App Store"
    exit 1
fi

echo "üì± Verificando simuladores disponibles..."
xcrun simctl list devices available | grep "iPhone\|iPad"

echo ""
echo "üîß Configurando permisos del simulador..."

# Obtener el ID del simulador booteado
BOOTED_SIMULATOR=$(xcrun simctl list devices | grep "Booted" | head -1 | sed 's/.*(\([^)]*\)).*/\1/')

if [ -z "$BOOTED_SIMULATOR" ]; then
    echo "‚ö†Ô∏è  No hay simulador ejecut√°ndose. Iniciando simulador..."
    
    # Listar simuladores disponibles y usar el primero
    FIRST_SIMULATOR=$(xcrun simctl list devices available | grep "iPhone" | head -1 | sed 's/.*(\([^)]*\)).*/\1/')
    
    if [ -z "$FIRST_SIMULATOR" ]; then
        echo "‚ùå No se encontraron simuladores disponibles"
        echo "Crea un simulador desde Xcode: Window ‚Üí Devices and Simulators"
        exit 1
    fi
    
    echo "üöÄ Iniciando simulador: $FIRST_SIMULATOR"
    xcrun simctl boot "$FIRST_SIMULATOR"
    BOOTED_SIMULATOR="$FIRST_SIMULATOR"
    
    # Esperar a que el simulador se inicie
    sleep 5
fi

echo "‚úÖ Simulador activo: $BOOTED_SIMULATOR"

# Verificar si la app est√° instalada
echo "üì≤ Verificando si Minerva ERP est√° instalada..."
APP_INSTALLED=$(xcrun simctl listapps "$BOOTED_SIMULATOR" | grep -i "minerva")

if [ -z "$APP_INSTALLED" ]; then
    echo "‚ö†Ô∏è  La aplicaci√≥n no est√° instalada"
    echo "Ejecuta primero: ./build_and_run.sh"
    exit 1
fi

echo "‚úÖ Aplicaci√≥n encontrada"

# Configurar permisos del simulador
echo "üîê Configurando permisos..."

# Configurar permiso de micr√≥fono
echo "‚Ä¢ Configurando permiso de micr√≥fono..."
xcrun simctl privacy "$BOOTED_SIMULATOR" grant microphone com.minerva.erp

# Configurar permiso de reconocimiento de voz
echo "‚Ä¢ Configurando permiso de reconocimiento de voz..."
xcrun simctl privacy "$BOOTED_SIMULATOR" grant speech-recognition com.minerva.erp

# Configurar permiso de notificaciones
echo "‚Ä¢ Configurando permiso de notificaciones..."
xcrun simctl privacy "$BOOTED_SIMULATOR" grant notifications com.minerva.erp

echo ""
echo "‚úÖ Permisos configurados correctamente"

# Verificar permisos
echo "üîç Verificando permisos configurados..."
echo "‚Ä¢ Micr√≥fono: $(xcrun simctl privacy "$BOOTED_SIMULATOR" get microphone com.minerva.erp)"
echo "‚Ä¢ Reconocimiento de voz: $(xcrun simctl privacy "$BOOTED_SIMULATOR" get speech-recognition com.minerva.erp)"
echo "‚Ä¢ Notificaciones: $(xcrun simctl privacy "$BOOTED_SIMULATOR" get notifications com.minerva.erp)"

echo ""
echo "üìã INSTRUCCIONES PARA USAR LA APP:"
echo "=================================="
echo "1. La app ya tiene todos los permisos necesarios"
echo "2. Abre la app Minerva ERP"
echo "3. Toca 'Iniciar Servicio'"
echo "4. El servicio escuchar√° continuamente en segundo plano"
echo "5. Di 'minerva' para activar la transcripci√≥n"
echo "6. La app se abrir√° autom√°ticamente y transcribir√° hasta 2 segundos de silencio"

echo ""
echo "üîß COMANDOS √öTILES:"
echo "==================="
echo "‚Ä¢ Ver logs de la app:"
echo "  xcrun simctl spawn $BOOTED_SIMULATOR log stream --predicate 'subsystem contains \"com.minerva.erp\"'"
echo ""
echo "‚Ä¢ Lanzar la app:"
echo "  xcrun simctl launch $BOOTED_SIMULATOR com.minerva.erp"
echo ""
echo "‚Ä¢ Desinstalar la app:"
echo "  xcrun simctl uninstall $BOOTED_SIMULATOR com.minerva.erp"

echo ""
echo "‚úÖ Configuraci√≥n completada"
