#!/bin/bash

# Script para monitorear logs de la aplicaci√≥n iOS Minerva ERP
# Similar al script de Android pero para iOS

echo "üçé Monitoreando aplicaci√≥n Minerva ERP iOS"
echo "=========================================="

# Verificar que estamos en macOS
if [[ "$OSTYPE" != "darwin"* ]]; then
    echo "‚ùå Este script solo funciona en macOS"
    exit 1
fi

# Verificar que Xcode est√° instalado
if ! command -v xcrun &> /dev/null; then
    echo "‚ùå Error: Xcode no est√° instalado"
    exit 1
fi

# Obtener el ID del simulador booteado
BOOTED_SIMULATOR=$(xcrun simctl list devices | grep "Booted" | head -1 | sed 's/.*(\([^)]*\)).*/\1/')

if [ -z "$BOOTED_SIMULATOR" ]; then
    echo "‚ö†Ô∏è  No hay simulador ejecut√°ndose"
    echo "Iniciando simulador..."
    
    # Listar simuladores disponibles y usar el primero
    FIRST_SIMULATOR=$(xcrun simctl list devices available | grep "iPhone" | head -1 | sed 's/.*(\([^)]*\)).*/\1/')
    
    if [ -z "$FIRST_SIMULATOR" ]; then
        echo "‚ùå No se encontraron simuladores disponibles"
        exit 1
    fi
    
    echo "üöÄ Iniciando simulador: $FIRST_SIMULATOR"
    xcrun simctl boot "$FIRST_SIMULATOR"
    BOOTED_SIMULATOR="$FIRST_SIMULATOR"
    
    # Esperar a que el simulador se inicie
    sleep 5
fi

echo "‚úÖ Simulador activo: $BOOTED_SIMULATOR"

# Verificar si la app est√° instalada
echo "üì≤ Verificando si Minerva ERP est√° instalada..."
APP_INSTALLED=$(xcrun simctl listapps "$BOOTED_SIMULATOR" | grep -i "minerva")

if [ -z "$APP_INSTALLED" ]; then
    echo "‚ö†Ô∏è  La aplicaci√≥n no est√° instalada"
    echo "Ejecuta primero: ./build_and_run.sh"
    exit 1
fi

echo "‚úÖ Aplicaci√≥n encontrada"

# Lanzar la aplicaci√≥n si no est√° ejecut√°ndose
echo "üöÄ Lanzando aplicaci√≥n Minerva ERP..."
xcrun simctl launch "$BOOTED_SIMULATOR" com.minerva.erp

echo ""
echo "üìã INSTRUCCIONES:"
echo "=================="
echo "1. La app se ha lanzado autom√°ticamente"
echo "2. Acepta los permisos de micr√≥fono y reconocimiento de voz"
echo "3. Toca 'Iniciar Servicio' en la app"
echo "4. El servicio escuchar√° continuamente en segundo plano"
echo "5. Di 'minerva' para activar la transcripci√≥n"
echo ""
echo "üîç Monitoreando logs de la aplicaci√≥n..."
echo "Presiona Ctrl+C para detener el monitoreo"
echo ""

# Funci√≥n para mostrar logs en tiempo real
show_logs() {
    echo "üìä Iniciando monitoreo de logs..."
    
    # Filtrar logs relacionados con la aplicaci√≥n
    xcrun simctl spawn "$BOOTED_SIMULATOR" log stream \
        --predicate 'subsystem contains "com.minerva.erp" OR process contains "MinervaERP"' \
        --style compact
}

# Funci√≥n para limpiar al salir
cleanup() {
    echo ""
    echo "üõë Deteniendo monitoreo..."
    exit 0
}

# Configurar trap para limpieza
trap cleanup SIGINT SIGTERM

# Mostrar logs
show_logs
